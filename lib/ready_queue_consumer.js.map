{"version":3,"sources":["../src/ready_queue_consumer.js"],"names":["config","require","Promise","ReadyQueueConsumer","channel","self","consume","readyQueueName","msg","try","targetQueueName","properties","headers","_targetQueue","_originalProperties","sendToQueue","Buffer","content","then","ack","catch","err","console","error","JSON","stringify","nack","module","exports"],"mappings":"wpBAAA,GAAMA,QAASC,QAAQ,UAAR,CAAf,CACA,GAAMC,SAAUD,QAAQ,UAAR,CAAhB,C,GAEME,mB,YACJ,4BAAaC,OAAb,CAAsB,0CACpB,KAAKA,OAAL,CAAeA,OAChB,C,oEAEQ,CACP,GAAMC,MAAO,IAAb,CACA,MAAOA,MAAKD,OAAL,CAAaE,OAAb,CAAqBN,OAAOO,cAA5B,CAA4C,SAACC,GAAD,QACjDN,SACGO,GADH,CACO,UAAM,CACT,GAAMC,iBAAkBF,IAAIG,UAAJ,CAAeC,OAAf,CAAuBC,YAA/C,CACA,GAAMF,YAAaH,IAAIG,UAAJ,CAAeC,OAAf,CAAuBE,mBAA1C,CACA,MAAOT,MAAKD,OAAL,CAAaW,WAAb,CAAyBL,eAAzB,CAA0C,GAAIM,OAAJ,CAAWR,IAAIS,OAAf,CAA1C,CAAmEN,UAAnE,CACR,CALH,EAMGO,IANH,CAMQ,iBAAMb,MAAKD,OAAL,CAAae,GAAb,CAAiBX,GAAjB,CAAN,CANR,EAOGY,KAPH,CAOS,SAACC,GAAD,CAAS,CACdC,QAAQC,KAAR,CAAc,kEAAoEF,GAApE,CAA0E,SAA1E,CAAsFG,KAAKC,SAAL,CAAejB,GAAf,CAApG,EACAH,KAAKD,OAAL,CAAasB,IAAb,CAAkBlB,GAAlB,CACD,CAVH,CADiD,CAA5C,CAaR,C,iCAGHmB,OAAOC,OAAP,CAAiBzB,kBAAjB","file":"ready_queue_consumer.js","sourcesContent":["const config = require('./config')\nconst Promise = require('bluebird')\n\nclass ReadyQueueConsumer {\n  constructor (channel) {\n    this.channel = channel\n  }\n\n  start () {\n    const self = this\n    return self.channel.consume(config.readyQueueName, (msg) =>\n      Promise\n        .try(() => {\n          const targetQueueName = msg.properties.headers._targetQueue\n          const properties = msg.properties.headers._originalProperties\n          return self.channel.sendToQueue(targetQueueName, new Buffer(msg.content), properties)\n        })\n        .then(() => self.channel.ack(msg))\n        .catch((err) => {\n          console.error('Error: while trying to process message from ready queue.  err: ' + err + ', msg: ' + JSON.stringify(msg))\n          self.channel.nack(msg)\n        })\n    )\n  }\n}\n\nmodule.exports = ReadyQueueConsumer\n"]}