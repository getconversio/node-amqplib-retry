{"version":3,"sources":["../src/index.js"],"names":["Initializer","require","ReadyQueueConsumer","amqpHandlerWrapper","readyQueuePromises","startReadyQueueConsumer","channel","consumer","start","module","exports","options","Error","consumerQueue","handler","failureQueue","initializer","wrapper","delay","initialize","then"],"mappings":"aAAA,GAAMA,aAAcC,QAAQ,eAAR,CAApB,CACA,GAAMC,oBAAqBD,QAAQ,wBAAR,CAA3B,CACA,GAAME,oBAAqBF,QAAQ,wBAAR,CAA3B,CAEA,GAAMG,oBAAqB,EAA3B,CAEA,GAAMC,yBAA0B,QAA1BA,wBAA0B,CAACC,OAAD,CAAa,CAC3C,GAAI,CAACF,mBAAmBE,OAAnB,CAAL,CAAkC,CAChC,GAAMC,UAAW,GAAIL,mBAAJ,CAAuBI,OAAvB,CAAjB,CACAF,mBAAmBE,OAAnB,EAA8BC,SAASC,KAAT,EAC/B,CAED,MAAOJ,oBAAmBE,OAAnB,CACR,CAPD,CASAG,OAAOC,OAAP,CAAiB,SAACC,OAAD,CAAa,CAC5B;AACA,GAAI,CAACA,QAAQL,OAAb,CAAsB,CACpB,KAAM,IAAIM,MAAJ,CAAU,gDAAV,CACP,CACD,GAAI,CAACD,QAAQE,aAAb,CAA4B,CAC1B,KAAM,IAAID,MAAJ,CAAU,sDAAV,CACP,CACD,GAAI,CAACD,QAAQG,OAAb,CAAsB,CACpB,KAAM,IAAIF,MAAJ,CAAU,gDAAV,CACP,CAED;AACA,GAAI,CAACD,QAAQI,YAAb,CAA2B,CACzBJ,QAAQI,YAAR,CAAuBJ,QAAQE,aAAR,CAAwB,UAChD,CAED;AACA,GAAMG,aAAc,GAAIhB,YAAJ,CAAgBW,QAAQL,OAAxB,CAAiCK,QAAQE,aAAzC,CAAwDF,QAAQI,YAAhE,CAApB,CACA,GAAME,SAAUd,mBAAmBQ,QAAQL,OAA3B,CAAoCK,QAAQE,aAA5C,CAA2DF,QAAQI,YAAnE,CAAiFJ,QAAQG,OAAzF,CAAkGH,QAAQO,KAA1G,CAAiHF,WAAjH,CAAhB,CAEA;AACAA,YACGG,UADH,GAEGC,IAFH,CAEQ,iBAAMf,yBAAwBM,QAAQL,OAAhC,CAAN,CAFR,EAIA;AACA,MAAOW,QACR,CA5BD","file":"index.js","sourcesContent":["const Initializer = require('./initializer')\nconst ReadyQueueConsumer = require('./ready_queue_consumer')\nconst amqpHandlerWrapper = require('./amqp_handler_wrapper')\n\nconst readyQueuePromises = { };\n\nconst startReadyQueueConsumer = (channel) => {\n  if (!readyQueuePromises[channel]) {\n    const consumer = new ReadyQueueConsumer(channel);\n    readyQueuePromises[channel] = consumer.start();\n  }\n\n  return readyQueuePromises[channel];\n}\n\nmodule.exports = (options) => {\n  // validate options\n  if (!options.channel) {\n    throw new Error('\\'channel\\' not specified.  See documentation.')\n  }\n  if (!options.consumerQueue) {\n    throw new Error('\\'consumerQueue\\' not specified.  See documentation.')\n  }\n  if (!options.handler) {\n    throw new Error('\\'handler\\' not specified.  See documentation.')\n  }\n\n  // set defaults\n  if (!options.failureQueue) {\n    options.failureQueue = options.consumerQueue + '.failure'\n  }\n\n  // initializing the objects\n  const initializer = new Initializer(options.channel, options.consumerQueue, options.failureQueue)\n  const wrapper = amqpHandlerWrapper(options.channel, options.consumerQueue, options.failureQueue, options.handler, options.delay, initializer)\n\n  // initializing the queues, exchange and binding. Then starting the consumer\n  initializer\n    .initialize()\n    .then(() => startReadyQueueConsumer(options.channel))\n\n  // returning wrapper for given amqp handler function.\n  return wrapper\n}\n"]}